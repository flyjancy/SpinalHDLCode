$date
	Fri Dec 18 15:22:29 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Adder32_1_tb $end
$var wire 1 ! io_c_out $end
$var wire 32 " io_c [31:0] $end
$var reg 32 # io_a [31:0] $end
$var reg 32 $ io_b [31:0] $end
$var reg 1 % io_c_in $end
$scope module Adder_32_1_inst $end
$var wire 32 & io_a [31:0] $end
$var wire 32 ' io_b [31:0] $end
$var wire 1 % io_c_in $end
$var wire 1 ! io_c_out $end
$var wire 1 ( adder_63_io_c_out $end
$var wire 1 ) adder_63_io_c $end
$var wire 1 * adder_62_io_c_out $end
$var wire 1 + adder_62_io_c $end
$var wire 1 , adder_61_io_c_out $end
$var wire 1 - adder_61_io_c $end
$var wire 1 . adder_60_io_c_out $end
$var wire 1 / adder_60_io_c $end
$var wire 1 0 adder_59_io_c_out $end
$var wire 1 1 adder_59_io_c $end
$var wire 1 2 adder_58_io_c_out $end
$var wire 1 3 adder_58_io_c $end
$var wire 1 4 adder_57_io_c_out $end
$var wire 1 5 adder_57_io_c $end
$var wire 1 6 adder_56_io_c_out $end
$var wire 1 7 adder_56_io_c $end
$var wire 1 8 adder_55_io_c_out $end
$var wire 1 9 adder_55_io_c $end
$var wire 1 : adder_54_io_c_out $end
$var wire 1 ; adder_54_io_c $end
$var wire 1 < adder_53_io_c_out $end
$var wire 1 = adder_53_io_c $end
$var wire 1 > adder_52_io_c_out $end
$var wire 1 ? adder_52_io_c $end
$var wire 1 @ adder_51_io_c_out $end
$var wire 1 A adder_51_io_c $end
$var wire 1 B adder_50_io_c_out $end
$var wire 1 C adder_50_io_c $end
$var wire 1 D adder_49_io_c_out $end
$var wire 1 E adder_49_io_c $end
$var wire 1 F adder_48_io_c_out $end
$var wire 1 G adder_48_io_c $end
$var wire 1 H adder_47_io_c_out $end
$var wire 1 I adder_47_io_c $end
$var wire 1 J adder_46_io_c_out $end
$var wire 1 K adder_46_io_c $end
$var wire 1 L adder_45_io_c_out $end
$var wire 1 M adder_45_io_c $end
$var wire 1 N adder_44_io_c_out $end
$var wire 1 O adder_44_io_c $end
$var wire 1 P adder_43_io_c_out $end
$var wire 1 Q adder_43_io_c $end
$var wire 1 R adder_42_io_c_out $end
$var wire 1 S adder_42_io_c $end
$var wire 1 T adder_41_io_c_out $end
$var wire 1 U adder_41_io_c $end
$var wire 1 V adder_40_io_c_out $end
$var wire 1 W adder_40_io_c $end
$var wire 1 X adder_39_io_c_out $end
$var wire 1 Y adder_39_io_c $end
$var wire 1 Z adder_38_io_c_out $end
$var wire 1 [ adder_38_io_c $end
$var wire 1 \ adder_37_io_c_out $end
$var wire 1 ] adder_37_io_c $end
$var wire 1 ^ adder_36_io_c_out $end
$var wire 1 _ adder_36_io_c $end
$var wire 1 ` adder_35_io_c_out $end
$var wire 1 a adder_35_io_c $end
$var wire 1 b adder_34_io_c_out $end
$var wire 1 c adder_34_io_c $end
$var wire 1 d adder_33_io_c_out $end
$var wire 1 e adder_33_io_c $end
$var wire 1 f adder_32_io_c_out $end
$var wire 1 g adder_32_io_c $end
$var wire 1 h _zz_95 $end
$var wire 1 i _zz_94 $end
$var wire 1 j _zz_93 $end
$var wire 1 k _zz_92 $end
$var wire 1 l _zz_91 $end
$var wire 1 m _zz_90 $end
$var wire 1 n _zz_9 $end
$var wire 1 o _zz_89 $end
$var wire 1 p _zz_88 $end
$var wire 1 q _zz_87 $end
$var wire 1 r _zz_86 $end
$var wire 1 s _zz_85 $end
$var wire 1 t _zz_84 $end
$var wire 1 u _zz_83 $end
$var wire 1 v _zz_82 $end
$var wire 1 w _zz_81 $end
$var wire 1 x _zz_80 $end
$var wire 1 y _zz_8 $end
$var wire 1 z _zz_79 $end
$var wire 1 { _zz_78 $end
$var wire 1 | _zz_77 $end
$var wire 1 } _zz_76 $end
$var wire 1 ~ _zz_75 $end
$var wire 1 !" _zz_74 $end
$var wire 1 "" _zz_73 $end
$var wire 1 #" _zz_72 $end
$var wire 1 $" _zz_71 $end
$var wire 1 %" _zz_70 $end
$var wire 1 &" _zz_7 $end
$var wire 1 '" _zz_69 $end
$var wire 1 (" _zz_68 $end
$var wire 1 )" _zz_67 $end
$var wire 1 *" _zz_66 $end
$var wire 1 +" _zz_65 $end
$var wire 1 ," _zz_64 $end
$var wire 1 -" _zz_63 $end
$var wire 1 ." _zz_62 $end
$var wire 1 /" _zz_61 $end
$var wire 1 0" _zz_60 $end
$var wire 1 1" _zz_6 $end
$var wire 1 2" _zz_59 $end
$var wire 1 3" _zz_58 $end
$var wire 1 4" _zz_57 $end
$var wire 1 5" _zz_56 $end
$var wire 1 6" _zz_55 $end
$var wire 1 7" _zz_54 $end
$var wire 1 8" _zz_53 $end
$var wire 1 9" _zz_52 $end
$var wire 1 :" _zz_51 $end
$var wire 1 ;" _zz_50 $end
$var wire 1 <" _zz_5 $end
$var wire 1 =" _zz_49 $end
$var wire 1 >" _zz_48 $end
$var wire 1 ?" _zz_47 $end
$var wire 1 @" _zz_46 $end
$var wire 1 A" _zz_45 $end
$var wire 1 B" _zz_44 $end
$var wire 1 C" _zz_43 $end
$var wire 1 D" _zz_42 $end
$var wire 1 E" _zz_41 $end
$var wire 1 F" _zz_40 $end
$var wire 1 G" _zz_4 $end
$var wire 1 H" _zz_39 $end
$var wire 1 I" _zz_38 $end
$var wire 1 J" _zz_37 $end
$var wire 1 K" _zz_36 $end
$var wire 1 L" _zz_35 $end
$var wire 1 M" _zz_34 $end
$var wire 1 N" _zz_33 $end
$var wire 1 O" _zz_32 $end
$var wire 1 P" _zz_31 $end
$var wire 1 Q" _zz_30 $end
$var wire 1 R" _zz_3 $end
$var wire 1 S" _zz_29 $end
$var wire 1 T" _zz_28 $end
$var wire 1 U" _zz_27 $end
$var wire 1 V" _zz_26 $end
$var wire 1 W" _zz_25 $end
$var wire 1 X" _zz_24 $end
$var wire 1 Y" _zz_23 $end
$var wire 1 Z" _zz_22 $end
$var wire 1 [" _zz_21 $end
$var wire 1 \" _zz_20 $end
$var wire 1 ]" _zz_2 $end
$var wire 1 ^" _zz_19 $end
$var wire 1 _" _zz_18 $end
$var wire 1 `" _zz_17 $end
$var wire 1 a" _zz_16 $end
$var wire 1 b" _zz_15 $end
$var wire 1 c" _zz_14 $end
$var wire 1 d" _zz_13 $end
$var wire 1 e" _zz_12 $end
$var wire 1 f" _zz_11 $end
$var wire 1 g" _zz_10 $end
$var wire 1 h" _zz_1 $end
$var reg 32 i" c_in_out_w [31:0] $end
$var reg 32 j" io_c [31:0] $end
$scope module adder_32 $end
$var wire 1 h" io_a $end
$var wire 1 ]" io_b $end
$var wire 1 g io_c $end
$var wire 1 % io_c_in $end
$var wire 1 f io_c_out $end
$upscope $end
$scope module adder_33 $end
$var wire 1 R" io_a $end
$var wire 1 G" io_b $end
$var wire 1 e io_c $end
$var wire 1 <" io_c_in $end
$var wire 1 d io_c_out $end
$upscope $end
$scope module adder_34 $end
$var wire 1 1" io_a $end
$var wire 1 &" io_b $end
$var wire 1 c io_c $end
$var wire 1 y io_c_in $end
$var wire 1 b io_c_out $end
$upscope $end
$scope module adder_35 $end
$var wire 1 n io_a $end
$var wire 1 g" io_b $end
$var wire 1 a io_c $end
$var wire 1 f" io_c_in $end
$var wire 1 ` io_c_out $end
$upscope $end
$scope module adder_36 $end
$var wire 1 e" io_a $end
$var wire 1 d" io_b $end
$var wire 1 _ io_c $end
$var wire 1 c" io_c_in $end
$var wire 1 ^ io_c_out $end
$upscope $end
$scope module adder_37 $end
$var wire 1 b" io_a $end
$var wire 1 a" io_b $end
$var wire 1 ] io_c $end
$var wire 1 `" io_c_in $end
$var wire 1 \ io_c_out $end
$upscope $end
$scope module adder_38 $end
$var wire 1 _" io_a $end
$var wire 1 ^" io_b $end
$var wire 1 [ io_c $end
$var wire 1 \" io_c_in $end
$var wire 1 Z io_c_out $end
$upscope $end
$scope module adder_39 $end
$var wire 1 [" io_a $end
$var wire 1 Z" io_b $end
$var wire 1 Y io_c $end
$var wire 1 Y" io_c_in $end
$var wire 1 X io_c_out $end
$upscope $end
$scope module adder_40 $end
$var wire 1 X" io_a $end
$var wire 1 W" io_b $end
$var wire 1 W io_c $end
$var wire 1 V" io_c_in $end
$var wire 1 V io_c_out $end
$upscope $end
$scope module adder_41 $end
$var wire 1 U" io_a $end
$var wire 1 T" io_b $end
$var wire 1 U io_c $end
$var wire 1 S" io_c_in $end
$var wire 1 T io_c_out $end
$upscope $end
$scope module adder_42 $end
$var wire 1 Q" io_a $end
$var wire 1 P" io_b $end
$var wire 1 S io_c $end
$var wire 1 O" io_c_in $end
$var wire 1 R io_c_out $end
$upscope $end
$scope module adder_43 $end
$var wire 1 N" io_a $end
$var wire 1 M" io_b $end
$var wire 1 Q io_c $end
$var wire 1 L" io_c_in $end
$var wire 1 P io_c_out $end
$upscope $end
$scope module adder_44 $end
$var wire 1 K" io_a $end
$var wire 1 J" io_b $end
$var wire 1 O io_c $end
$var wire 1 I" io_c_in $end
$var wire 1 N io_c_out $end
$upscope $end
$scope module adder_45 $end
$var wire 1 H" io_a $end
$var wire 1 F" io_b $end
$var wire 1 M io_c $end
$var wire 1 E" io_c_in $end
$var wire 1 L io_c_out $end
$upscope $end
$scope module adder_46 $end
$var wire 1 D" io_a $end
$var wire 1 C" io_b $end
$var wire 1 K io_c $end
$var wire 1 B" io_c_in $end
$var wire 1 J io_c_out $end
$upscope $end
$scope module adder_47 $end
$var wire 1 A" io_a $end
$var wire 1 @" io_b $end
$var wire 1 I io_c $end
$var wire 1 ?" io_c_in $end
$var wire 1 H io_c_out $end
$upscope $end
$scope module adder_48 $end
$var wire 1 >" io_a $end
$var wire 1 =" io_b $end
$var wire 1 G io_c $end
$var wire 1 ;" io_c_in $end
$var wire 1 F io_c_out $end
$upscope $end
$scope module adder_49 $end
$var wire 1 :" io_a $end
$var wire 1 9" io_b $end
$var wire 1 E io_c $end
$var wire 1 8" io_c_in $end
$var wire 1 D io_c_out $end
$upscope $end
$scope module adder_50 $end
$var wire 1 7" io_a $end
$var wire 1 6" io_b $end
$var wire 1 C io_c $end
$var wire 1 5" io_c_in $end
$var wire 1 B io_c_out $end
$upscope $end
$scope module adder_51 $end
$var wire 1 4" io_a $end
$var wire 1 3" io_b $end
$var wire 1 A io_c $end
$var wire 1 2" io_c_in $end
$var wire 1 @ io_c_out $end
$upscope $end
$scope module adder_52 $end
$var wire 1 0" io_a $end
$var wire 1 /" io_b $end
$var wire 1 ? io_c $end
$var wire 1 ." io_c_in $end
$var wire 1 > io_c_out $end
$upscope $end
$scope module adder_53 $end
$var wire 1 -" io_a $end
$var wire 1 ," io_b $end
$var wire 1 = io_c $end
$var wire 1 +" io_c_in $end
$var wire 1 < io_c_out $end
$upscope $end
$scope module adder_54 $end
$var wire 1 *" io_a $end
$var wire 1 )" io_b $end
$var wire 1 ; io_c $end
$var wire 1 (" io_c_in $end
$var wire 1 : io_c_out $end
$upscope $end
$scope module adder_55 $end
$var wire 1 '" io_a $end
$var wire 1 %" io_b $end
$var wire 1 9 io_c $end
$var wire 1 $" io_c_in $end
$var wire 1 8 io_c_out $end
$upscope $end
$scope module adder_56 $end
$var wire 1 #" io_a $end
$var wire 1 "" io_b $end
$var wire 1 7 io_c $end
$var wire 1 !" io_c_in $end
$var wire 1 6 io_c_out $end
$upscope $end
$scope module adder_57 $end
$var wire 1 ~ io_a $end
$var wire 1 } io_b $end
$var wire 1 5 io_c $end
$var wire 1 | io_c_in $end
$var wire 1 4 io_c_out $end
$upscope $end
$scope module adder_58 $end
$var wire 1 { io_a $end
$var wire 1 z io_b $end
$var wire 1 3 io_c $end
$var wire 1 x io_c_in $end
$var wire 1 2 io_c_out $end
$upscope $end
$scope module adder_59 $end
$var wire 1 w io_a $end
$var wire 1 v io_b $end
$var wire 1 1 io_c $end
$var wire 1 u io_c_in $end
$var wire 1 0 io_c_out $end
$upscope $end
$scope module adder_60 $end
$var wire 1 t io_a $end
$var wire 1 s io_b $end
$var wire 1 / io_c $end
$var wire 1 r io_c_in $end
$var wire 1 . io_c_out $end
$upscope $end
$scope module adder_61 $end
$var wire 1 q io_a $end
$var wire 1 p io_b $end
$var wire 1 - io_c $end
$var wire 1 o io_c_in $end
$var wire 1 , io_c_out $end
$upscope $end
$scope module adder_62 $end
$var wire 1 m io_a $end
$var wire 1 l io_b $end
$var wire 1 + io_c $end
$var wire 1 k io_c_in $end
$var wire 1 * io_c_out $end
$upscope $end
$scope module adder_63 $end
$var wire 1 j io_a $end
$var wire 1 i io_b $end
$var wire 1 ) io_c $end
$var wire 1 h io_c_in $end
$var wire 1 ( io_c_out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1100 j"
b111 i"
1h"
0g"
1f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
1G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
1<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
11"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
1&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
1y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
1f
0e
1d
1c
1b
1a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
b110 '
b101 &
1%
b110 $
b101 #
b1100 "
0!
$end
#2000000
